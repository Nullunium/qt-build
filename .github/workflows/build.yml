name: Build Qt WebEngine

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 4096
        swap-size-mb: 512
        remove-dotnet: 'true'
        remove-android: 'true'
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install gperf flex bison perl ninja-build nodejs g++ cmake \
        libfontconfig1-dev \
        libfreetype-dev \
        libgtk-3-dev \
        libx11-dev \
        libx11-xcb-dev \
        libxcb-cursor-dev \
        libxcb-glx0-dev \
        libxcb-icccm4-dev \
        libxcb-image0-dev \
        libxcb-keysyms1-dev \
        libxcb-randr0-dev \
        libxcb-render-util0-dev \
        libxcb-shape0-dev \
        libxcb-shm0-dev \
        libxcb-sync-dev \
        libxcb-util-dev \
        libxcb-xfixes0-dev \
        libxcb-xkb-dev \
        libdouble-conversion-dev \
        libvulkan-dev \
        libts-dev \
        libcurl4-openssl-dev \
        libtiff-dev \
        liblttng-ust-dev \
        libgssapi-krb5-2 \
        gn \
        libmd4c-dev \
        liblitehtml-dev \
        libxcb1-dev \
        libxext-dev \
        libxfixes-dev \
        libxi-dev \
        libxkbcommon-dev \
        libxkbcommon-x11-dev \
        libxrender-dev \
        clang-16 \
        libclang-16-dev \
        llvm-16 \
        clang-17 \
        libclang-17-dev \
        llvm-17 \
        libgl-dev \
        libegl-dev \
        libfontconfig1-dev \
        libinput-dev \
        libatspi2.0-dev libnss3-dev libssl-dev libx11-dev libxext-dev libxtst-dev libxcomposite-dev libxdamage-dev libxrandr-dev libfontconfig1-dev libfreetype6-dev libpng-dev libjpeg-dev zlib1g-dev libasound2-dev libbz2-dev libcap-dev libcups2-dev libdrm-dev \
        libegl1-mesa-dev libfontconfig1-dev \
        libglu1-mesa-dev libicu-dev libnss3-dev libpci-dev libpulse-dev \
        libssl-dev libudev-dev libxcomposite-dev libxcursor-dev \
        libxdamage-dev libxrandr-dev libxtst-dev \
        libsystemd-dev \
        libb2-dev \
        libproxy-dev \
        libdirectfb-dev \
        node-tslib \
        docker-compose \
        libmng-dev \
        libsnappy-dev \
        libxshmfence-dev \
        libevent-dev \
        libminizip-dev \
        libre2-dev \
        liblcms2-dev \
        libxslt1-dev \
        libavcodec-dev \
        libavformat-dev \
        libavutil-dev \
        libopus-dev \
        libvpx-dev \
        libopenjp2-7-dev \
        libxkbfile-dev \
        libffmpeg-nvenc-dev \
        libffmpeg-ocaml-dev \
        libpoppler-cpp-dev \
        libgbm-dev \
        libva-dev
        pip install html5lib
    - name: Clone Qt repository
      run: git clone https://code.qt.io/qt/qt5.git
    - name: Checkout version 6.8.3
      run: |
        cd qt5
        git checkout v6.8.3
    - name: Initialize submodules 
      run: |
        cd qt5
        perl "./init-repository" --module-subset=qtbase,qtshadertools,qtdeclarative,qtwebengine
    - name: Create build directory
      run: mkdir qt-build
    - name: Configure & Build 
      run: |
        cd qt-build
        mkdir qtshadertools qtdeclarative qtwebengine qt-install
        ../qt5/configure -developer-build -submodules qtwebengine -prefix qt-install -webengine-proprietary-codecs -release -opensource -confirm-license 
        cmake --build . --parallel
        cd qtshadertools
        cmake -G Ninja -DCMAKE_INSTALL_PREFIX=qt-install -DQT_BUILD_EXAMPLES=OFF -DQT_BUILD_TESTS=OFF ../../qt5/qtshadertools
        cmake --build . --parallel
        cd ../qtdeclarative
        cmake -G Ninja -DCMAKE_INSTALL_PREFIX=qt-install -DQT_BUILD_EXAMPLES=OFF -DQT_BUILD_TESTS=OFF ../../qt5/qtdeclarative
        cmake --build . --parallel
        cd ../qtwebengine
        cmake -G Ninja -DCMAKE_INSTALL_PREFIX=qt-install -DQT_BUILD_EXAMPLES=OFF -DQT_BUILD_TESTS=OFF ../../qt5/qtwebengine
        cmake --build . --parallel
    # - name: Build Qt
    #   run: |
    #     cmake qt5
    #     cmake --build qt-build --parallel 
    # - name: Install Qt
    #   run: |
    #     cd qt-build
    #     cmake --install . 
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qt-webengine
        path: qt-build/qt-install